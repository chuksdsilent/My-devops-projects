upstream emartapi {
    server 192.168.0.188:5000; # server name is same as the service name used in docker-compose file
                         # port on which the service is running...NOT the exposed port(the RHS port in docker-compose ports attr.)
}
upstream booksapi {
    server 192.168.0.188:9000;
}
upstream client {
    server 192.168.0.188:4200;
}
server {
    listen 80;
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 

        # enable WebSockets (for ws://sockjs not connected error in the client source: https://stackoverflow.com/questions/41381444/websocket-connection-failed-error-during-websocket-handshake-unexpected-respon)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://client/;
    }
    location /api {
        rewrite ^/emartapi/(.*) /$1 break; # works for both /server1 and /server1/
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; 
        proxy_pass http://emartapi/;
    }
    location /webapi {
        rewrite ^/booksapi/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://booksapi/;
    }
}
